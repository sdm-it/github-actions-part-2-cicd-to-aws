# This is a basic workflow to help you get started with Actions

name: CI CD Pipeline to AWS ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "sdm-it-flask-application-packages"
  EB_APPLICATION_NAME       : "MyFlask1"
  EB_ENVIRONMENT_NAME       : "Myflask1-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-east-1"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: 
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  my_ci_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git Clone our repo
        uses: actions/checkout@v2

      - name: Create ZIP deployment package
        run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ x *.git*
      
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region            : ${{ env.AWS_REGION_NAME }}
          
      - name: Copy Deployment package to S3 bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      - name: Happy message for CI
        run : echo "CI Pipeline part Finished Succesfully"
      
  my_cd_part:
  
    runs-on: ubuntu-latest
    needs: [my_ci_part]

  
    steps:
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region            : ${{ env.AWS_REGION_NAME }}
          
      - name: Create new ElasticBeanstalk Application
        run : |
          aws elasticbeanstalk create application version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
           
      - name: Deploy new ElasticBeanstalk Application Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_APPLICATION_NAME }} --version-label "Ver-${{ github.sha }}"
     
      - name: Happy message for CD
        run : echo "CD Pipeline part Finished Succesfully"
          
          
          
          
          
          
          
          
          
          
          
          
          
          
